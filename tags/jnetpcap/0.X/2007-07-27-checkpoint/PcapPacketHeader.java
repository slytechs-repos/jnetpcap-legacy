/**
 * $Id$
 * Copyright (C) 2006 Sly Technologies, Inc.
 * 
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 * 
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
 */
package org.jnetpcap;

import java.sql.Timestamp;

/**
 * This interface provides access to the PCAP packet header as returned
 * during capture by the PCAP library. This header was generated by
 * the PCAP library at the time of the packet capture. This header mainly contains
 * information such as length and number of bytes captured and of course the
 * timestamp of exactly when the packet was captured.
 * 
 * @author Mark Bednarczyk
 * @author Sly Technologies, Inc.
 */
public interface PcapPacketHeader {

	/**
	 * Timestamp when the capture of the packet took place. The
	 * resolution of this system dependent but Timestamp allows
	 *  percision upto a nano second.
	 *  
	 * @return Capture event timestamp
	 */
	public Timestamp getTimestamp();
	
	/**
	 * How much data was captured. This may differ from the actual
	 * packet length that was sent on the wire.
	 * 
	 * @return number of bytes actually captured.
	 */
	public int	getCaptureLength();
	
	/**
	 * The length of the packet as it was seen on the wire. This may
	 * be different from actual bytes captured depending on how the
	 * capture was original setup using the snapLen parameter.
	 * 
	 * @return number of bytes in the original packet on the wire.
	 */
	public int getPacketLength();
}
