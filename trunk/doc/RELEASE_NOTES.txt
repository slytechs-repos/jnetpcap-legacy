################################################################################
#
#    Copyright (C) 2007 Sly Technologies, Inc.
#
#    This program is free software; you can redistribute it and/or
#    modify it under the terms of the GNU General Public License
#    as published by the Free Software Foundation; either version 2
#    of the License, or (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#
################################################################################

Updated: 2007-07-04 - Added to depencies section WinPcap requirements. 
                      Added "Operating System Support" section.

                              jNetPcap Package
                            Version 1.0b1 (beta 1)
                               Release Notes
                            Created on 2007-07-03

INTRODUCTION:
============

This release of jNetPcap library is the first beta release of the software. The
API classes are compiled with Java 1.5.X compiler and require Java 1.5 
compatibility. The package is platform dependent as there is a native library
supplied for each supported operating system (i.e. jnetpcap.dll file for win32
systems.)

This release provides the API for most of the common Libpcap's operations which 
are to open_live, open_offline, open_dead, compile filters and set them. For
capturing packets, both packet at a time and dispatched handler methods are 
implemented. Also various low level kernel buffer operations that are natively 
available through Libpcap library are implemented as well.

Since this is a beta release of the software the final version of the API and
functionality may change slightly by the time we reach production status. 
Feedback, peer review and feature requests are welcome. 

The javadoc API documentation  and a user guide is available at the project's 
website at (http://jnetpcap.sourceforge.net).

== Installation Instruction ==

To install the library simply unzip the binary 'library' package into any
directory. There are 2 parts to setting up environment for jNetPcap.

  *) Win32 Dependency: jNetPcap requires WinPcap 3.1 or greater installed.
     (http://winpcap.org)

  1) Add supplied jnetpcap-version.jar file to you build system's CLASSPATH.
     The jar file is found at the root of the installation directory.
  
  2) Setup native jnetpcap dynamically loadable library. This varies between
     operating systems.
     
     * On Win32 systems do only one of the following
       - copy the jnetpcap.dll library file, found at root of jnetpcap's
         installation directory to one of the window's system folders. This
         could be \windows or \windows\system32 directory.
         
       - add the jNetPcap's installation directory to system PATH variable. This
         is the same variable used access executables and scripts.
         
       - Tell Java VM at startup exactly where to find jnetpcap.dll by setting
         a java system property 'java.library.path' such as:
           c:\> java -Djava.library.path=%JNETPCAP_HOME%
           
       - You can change working directory into the root of jnetpcap's 
         installation directory.
         
     * On unix based systems
       - add jNetPcap's installation directory to LD_LIBRARY_PATH variable
       
       - Tell Java VM at startup exactly where to find jnetpcap.dll by setting
         a java system property 'java.library.path' such as:
           shell > java -Djava.library.path=$JNETPCAP_HOME
           
       - You can change working directory into the root of jnetpcap's 
         installation directory.
         
     * For further trouble shooting information, please see the following link:
       (http://jnetpcap.wiki.sourceforge.net/Troubleshooting+native+library)

== Project Website and Support ==

The project is actively maintained at (http://jnetpcap.sourceforge.net). For
commercial support please visit (http://www.slytechs.com).

Also please join project's mailing list, to discuss the project or report bugs.
(http://sourceforge.net/mail/?group_id=164277)

== Distributed Jar Files ==

The file jnetpcap-version-arch.jar provides the java implementation of the 
public API. The jar file will not function on its own and requires that the
supplied "native shared library" be also utilized (see below.) Without the
library, most of the classes in this jar file will throw a java 
'UnsatisfiedLinkException'.

== Distributed native shared library == 

The base directory of the distributed package contains a "native shared library"
either called 'jnetpcap.dll' on windows platforms, or 'libjnetpcap.so' on
unix based systems. The library is required in order utilize this distribution.
Most of the java classes included in this package will throw 
'UnsatisfiedLinkException' without this library being loaded. 

The native library to either LD_LIBRARY_PATH on unix system, or PATH variable 
on windows systems.

== Dependencies ==

 * On win32 systems
 
    - Install of WinPcap 3.1 or greater 
 
 	  + This is the main program pacakge. It installs drivers and DLLS
 	    (http://winpcap.org)
 	  
 	- No requirement for cgywin or mingw for runtime support

 * To run
 
   - Apache's commons-logging any version 
      (http://commons.apache.org/logging/index.html)
      
 * In addition to run supplied tests (not required)
 
   - jUnit any version
      (http://www.junit.org/index.htm)
      
 * To build from source (compiled binaries provided in package bundle)
 
   - ANT build tool for both Java and C++ sources
      (http://ant.apache.org)
      
   - Optinal ANT task for <CC> tag
      (http://ant-contrib.sourceforge.net/cc.html)
      
   - WIn32 MinGW with GCC (doesn't require 'cgywin' or any compatibility layers)
   
   - gcc on unix

Both the jnetpcap-version-arch.jar file and native jnetpcap library have to be 
loaded in order to use this package. The jnetpcap-version-arch.jar file needs
to be added to CLASSPATH, while the native library to either LD_LIBRARY_PATH
on unix system, or PATH variable on windows systems.

The only external dependency (not supplied) is on Apache 'commons-logging' 
facility. Any version will work.

Also if you want to run the included junit tests in the 'tests' sub directory,
you will need to included any version of 'jUnit' in the CLASSPATH.

== Operating System Notes ==

 * WinPcap OS support
 
 	- "Starting from WinPcap 4.0beta3, support for the Windows 9x/ME family of
 	  operating systems has been dropped. The last builds supporting such OSes
 	  are WinPcap 3.1 and WinPcap 4.0beta2", source http://winpcap.org website.
 	  
 	- jNetPcap 1.0b1 has been tested with WinPcap versions 3.1, 4.0, 4.0.1
 	
 	- jNetPcap 1.0b1 will not work with versions prior to 3.1 including 3.0 
 	  itself.
 	  
 * On Linux/Freebsd

    - jNetPcap 1.0b1 does not provide support for these operating system. These
      operating systems will be released starting with 1.0b2.
      
  * On Apple OS support - no immediate support planned, but will release support
                          at some point.


== General Notes ==

This is the first beta release of jNetPcap. The library has been tested with
many jUnit test cases for both correct and out of bounds usage. The release's
build process does testing on the code before and after its packaged to
ensure everything is included and built with consistent environment and flags.

The beta version's of the library contain full debug information, in case any
problems are encountered and to allow troubleshooting of such problems. 
Eventual production release will have debugging information removed from default
builds suitable for deployment in commercial products.

== Bugs Fixed ==

* No bugs found in this release

== Deprecations ==

* None