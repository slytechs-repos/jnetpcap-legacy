
################################################################################
#
# The properties should be prefixed with "build" upon inclusion
# i.e. dir  ==>> build.dir, and obj.dir ==>> build.obj.dir, etc..
#
# To include this file correctly:
#   <property file="build.properties" prefix="build"/>
#
################################################################################

# BUILD directory structure
dir 				= build
classes.dir 		= ${dir}/classes
api.dir 			= ${dir}/api
pcap.dir 			= ${dir}/pcap
jni.dir 			= ${dir}/jni
obj.dir				= ${dir}/obj
include.dir			= ${dir}/include

# 3rd party PCAP SDK properties
pcap.sdk.dir			= ${pcap.dir}/WpdPack
pcap.lib.dir			= ${pcap.sdk.dir}/Lib
pcap.include.dir		= ${pcap.sdk.dir}/Include
pcap.lib.name			= wpcap
pcap.lib.filename		= ${prj.os.lib.static.pre}${pcap.lib.name}${prj.os.lib.static.post}${prj.os.lib.static.ext}
pcap.lib.filepath		= ${pcap.lib.dir}/${pcap.lib.filename}
pcap.sdk.zip.filepath	= ${prj.lib.dir}/WpdPack_4_0_1.zip

# Project's JNI properties
jni.lib.name		= jnetpcap
jni.lib.filename	= ${prj.os.lib.shared.pre}${jni.lib.name}${prj.os.lib.shared.post}${prj.os.lib.shared.ext}
jni.lib.filepath	= ${jni.dir}/${jni.lib.filename}
jni.object.files	= jnetpcap.o \
					  jnetpcap_utils.o \
					  jnetpcap_bpf.o
					  
# Compiler and linker options, initialized from global defaults
compiler.debug		= ${prj.opt.debug}
compiler.verbose	= ${prj.opt.verbose}
compiler.optimize	= ${prj.opt.optimize}

linker.debug		= ${prj.opt.debug}
linker.verbose		= ${prj.opt.verbose}
linker.optimize		= ${prj.opt.optimize}

javah.force			= ${prj.opt.force}

# Compiler environment properties
compiler.home.dir	= "/mingw"
compiler.bin.dir	= ${compiler.home.dir}/bin
compiler.path		= ${compiler.bin.dir}
compiler.cmd		= gcc

linker.home.dir		= ${compiler.home.dir}
linker.bin.dir		= ${linker.home.dir}/bin
linker.path			= ${linker.bin.dir}
linker.cmd			= gcc

# ANT CC task properties
cc.multithreaded	= yes
cc.exceptions		= true
cc.compiler.cmd		= gcc
cc.linker.cmd		= gcc
